apiVersion: v1
kind: ConfigMap
metadata:
  name: database-automation-config
  namespace: database-automation
  labels:
    app.kubernetes.io/name: database-automation
    app.kubernetes.io/component: config
    app.kubernetes.io/part-of: database-automation-suite
    app.kubernetes.io/managed-by: kubernetes
data:
  LOG_LEVEL: "INFO"
  PYTHONPATH: "/app"
  BACKUP_RETENTION_DAYS: "30"
  MONITORING_INTERVAL: "300"
  METRICS_PORT: "8000"
  
  # Database configuration template
  db_config.yaml: |
    databases:
      postgres_primary:
        host: "${POSTGRES_HOST}"
        port: ${POSTGRES_PORT}
        database: "${POSTGRES_DB}"
        username: "${POSTGRES_USER}"
        password: "${POSTGRES_PASSWORD}"
        db_type: postgresql
        connection_pool_size: 20
        ssl_mode: require
        connect_timeout: 30

      postgres_replica:
        host: "${POSTGRES_REPLICA_HOST}"
        port: ${POSTGRES_REPLICA_PORT}
        database: "${POSTGRES_DB}"
        username: "${POSTGRES_USER}"
        password: "${POSTGRES_PASSWORD}"
        db_type: postgresql
        connection_pool_size: 10
        ssl_mode: require
        connect_timeout: 30

    monitoring:
      check_interval: 300
      alert_thresholds:
        connection_count: 100
        query_duration_minutes: 5
        disk_usage: 90
        cpu_usage: 80
        memory_usage: 85

      email_alerts:
        enabled: true
        smtp_server: "${SMTP_SERVER}"
        smtp_port: ${SMTP_PORT}
        from_email: "${ALERT_FROM_EMAIL}"
        alert_recipients:
          - "${DBA_EMAIL}"
          - "${SRE_EMAIL}"

    backup:
      schedule: "0 2 * * *"
      retention_days: 30
      backup_path: "/var/backups"
      compression: true
      parallel_jobs: 4

      remote_storage:
        enabled: true
        type: "s3"
        bucket: "${BACKUP_BUCKET}"
        region: "${AWS_REGION}"

    security:
      connection_encryption: true
      audit_logging: true
      failed_login_threshold: 5

    high_availability:
      replication:
        enabled: true
        type: streaming
        synchronous: false

      failover:
        auto_failover: false
        health_check_interval: 30
        failure_threshold: 3

    kubernetes:
      enabled: true
      namespace: "database-automation"
      storage_class: "fast-ssd"
      resource_limits:
        cpu: "2000m"
        memory: "4Gi"
      resource_requests:
        cpu: "1000m"
        memory: "2Gi"